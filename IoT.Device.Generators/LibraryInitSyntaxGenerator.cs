using System.Text;

namespace IoT.Device.Generators;

internal static class LibraryInitSyntaxGenerator
{
    public static string GenerateLibInitClass(string namespaceName, string className, string initMethodName,
        IEnumerable<(string TargetType, string ImplType, string Model)> exports)
    {
        var sb = new StringBuilder();
        sb.Append("""
        //------------------------------------------------------------------------------
        // <auto-generated>
        //      This code was generated by a tool.
        //      
        """);
        sb.Append(ProductInfo.Product);
        sb.Append(" v");
        sb.Append(ProductInfo.Version);
        sb.Append(" (");
        sb.Append(ProductInfo.Copyright);
        sb.Append("""
        )
        //
        //      Changes to this file may cause incorrect behavior and will be lost
        //      if the code is regenerated.
        // </auto-generated>
        //------------------------------------------------------------------------------

        using IoT.Device;

        namespace 
        """);

        sb.AppendLine(namespaceName);
        sb.Append("""
        {
            public static partial class 
        """);
        sb.AppendLine(className);
        sb.Append("""
            {
                public static void 
        """);
        sb.Append(initMethodName);
        sb.Append("""
        ()
                {

        """);

        foreach (var (targetType, implType, model) in exports)
        {
            sb.Append("""
                            DeviceFactory<
                """);
            sb.Append(targetType);
            sb.Append(">.Register<");
            sb.Append(implType);
            sb.Append(@">(""");
            sb.Append(model);
            sb.Append("""
                ");

                """);
        }

        sb.Append("""

                    
        """);
        sb.Append(initMethodName);
        sb.Append("""
        Extra();
                }

                static partial void 
        """);
        sb.Append(initMethodName);
        sb.Append("""
        Extra();
            }
        }
        """);

        return sb.ToString();
    }
}